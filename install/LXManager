#!/bin/bash

# Definir la variable para el alias
$mainPath="/etc/vpsmanager"
ALIAS_NAME="adm"
MENU_PATH="$mainPath/adm.sh"
ALIAS_COMMAND="sudo $MENU_PATH"

clear && clear
colores="$(pwd)/colores"
rm -rf ${colores}
wget -O ${colores} "https://github.com/Angel892/vpsmanager/raw/master/install/colores" &>/dev/null
[[ ! -e ${colores} ]] && exit
chmod +x ${colores} &>/dev/null
##-->> CARGAR SC EXTERNO
source $(pwd)/colores
CTRL_C() {
    rm -rf ${colores}
    rm -rf $(pwd)/adm
    exit
}
##-->> DETECTAR CANCELAR Y ELIMINAR ARCHIVO
trap "CTRL_C" INT TERM EXIT
rm $(pwd)/$0 &>/dev/null
#-->> DETECTAR ROOT
if [ $(whoami) != 'root' ]; then
    echo ""
    echo -e "\033[1;31m NECESITAS SER USER ROOT PARA EJECUTAR EL SCRIPT \n\n\033[97m                DIGITE: \033[1;32m sudo su\n"
    exit
fi
if fuser /var/lib/dpkg/lock >/dev/null 2>&1; then
    echo -e "\033[1;31mEl sistema de actualización está siendo utilizado por otro proceso. Deteniendo el proceso..."
    pid=$(fuser /var/lib/dpkg/lock 2>/dev/null)
    if [ ! -z "$pid" ]; then
        echo -e "\033[1;31mDeteniendo el proceso $pid..."
        kill -9 $pid >/dev/null 2>&1
    fi
fi

os_system() {
    system=$(cat -n /etc/issue | grep 1 | cut -d ' ' -f6,7,8 | sed 's/1//' | sed 's/      //')
    distro=$(echo "$system" | awk '{print $1}')

    case $distro in
    Debian) vercion=$(echo $system | awk '{print $3}' | cut -d '.' -f1) ;;
    Ubuntu) vercion=$(echo $system | awk '{print $2}' | cut -d '.' -f1,2) ;;
    esac
}

dependencias() {
    dpkg --configure -a >/dev/null 2>&1
    apt -f install -y >/dev/null 2>&1
    packages="zip unzip python python3 python3-pip openssl iptables lsof pv boxes at mlocate gawk bc jq npm nodejs socat net-tools cowsay figlet lolcat git"
    for i in $packages; do
        paquete="$i"
        echo -e "\033[1;97m        INSTALANDO PAQUETE \e[93m >>> \e[36m $i"
        barra_intall "apt-get install $i -y"
    done
}

install_paquetes() {
    clear && clear
    msgi -bar2
    echo -e " \e[33m\e[5m\033[1;100m   =====>> ►►  🖥  SCRIPT | LXManager  🖥  ◄◄ <<=====   \033[1;37m"
    msgi -bar
    echo -e "  \033[1;41m    -- INSTALACION DE PAQUETES PARA LXManager --   \e[49m"
    msgi -bar
    dependencias
    echo -e "\e[1;97m          REMOVIENDO PAQUETES OBSOLETOS \e[1;32m"
    barra_intall "apt autoremove -y "
    echo iptables-persistent iptables-persistent/autosave_v4 boolean true | sudo debconf-set-selections
    echo iptables-persistent iptables-persistent/autosave_v6 boolean true | sudo debconf-set-selections
    msgi -bar2
    read -t 30 -n 1 -rsp $'\033[1;97m           Preciona Enter Para continuar\n'
}

instalacionInicial() {
    clear && clear
    #CARPETAS PRINCIPALES
    mkdir -p "${mainPath}" >/dev/null 2>&1
    mkdir -p "${mainPath}/temp" >/dev/null 2>&1
    mkdir -p "${mainPath}/filespy" >/dev/null 2>&1
    mkdir -p "${mainPath}/botmanager" >/dev/null 2>&1
    mkdir -p "${mainPath}/PortM" >/dev/null 2>&1
    mkdir -p "${mainPath}/v2ray" >/dev/null 2>&1
    mkdir -p /root/.ssh >/dev/null 2>&1

    #--VERIFICAR IP MANUAL
    tu_ip() {
        echo ""
        echo -ne "\033[1;96m #Digite tu IP Publica (IPV4): \033[32m" && read IP
        val_ip() {
            local ip=$IP
            local stat=1
            if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
                OIFS=$IFS
                IFS='.'
                ip=($ip)
                IFS=$OIFS
                [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
                stat=$?
            fi
            return $stat
        }
        if val_ip $IP; then
            mkdir -p /root/.ssh
            echo "$IP" >/root/.ssh/authrized_key.reg
        else
            echo ""
            echo -e "\033[31mLa IP Digitada no es valida, Verifiquela"
            echo ""
            sleep 5s
            fun_ip
        fi
    }
    #CONFIGURAR SSH-ROOT PRINCIPAL AMAZON, GOOGLE
    pass_root() {
        wget -O /etc/ssh/sshd_config https://github.com/Angel892/vpsmanager/raw/master/install/sshd_config >/dev/null 2>&1
        chmod +rwx /etc/ssh/sshd_config
        service ssh restart
        msgi -bar
        echo -ne "\033[1;97m DIGITE NUEVA CONTRASEÑA:  \033[1;31m" && read pass
        (
            echo $pass
            echo $pass
        ) | passwd root 2>/dev/null
        sleep 1s
        msgi -bar
        echo -e "\033[1;94m     CONTRASEÑA AGREGADA O EDITADA CORECTAMENTE"
        echo -e "\033[1;97m TU CONTRASEÑA ROOT AHORA ES: \e[41m $pass \033[0;37m"

    }

    os_system

    msgi -bar2
    echo -e " \e[5m\033[1;100m   =====>> ►►  🖥  SCRIPT | LXManager  🖥  ◄◄ <<=====   \033[1;37m"
    msgi -bar2
    msgi -ama "   PREPARANDO INSTALACION"
    msgi -bar2
    ## PAQUETES-UBUNTU PRINCIPALES
    echo ""
    echo -e "\033[1;97m         🔎 IDENTIFICANDO SISTEMA OPERATIVO"
    echo -e "\033[1;32m                 | $distro $vercion |"
    echo ""
    echo -e "\033[1;97m    ◽️ DESACTIVANDO PASS ALFANUMERICO "
    [[ $(dpkg --get-selections | grep -w "libpam-cracklib" | head -1) ]] || barra_intallb "apt-get install libpam-cracklib -y &>/dev/null"
    echo -e '# Modulo Pass Simple
password [success=1 default=ignore] pam_unix.so obscure sha512
password requisite pam_deny.so
password required pam_permit.so' >/etc/pam.d/common-password && chmod +x /etc/pam.d/common-password
    [[ $(dpkg --get-selections | grep -w "libpam-cracklib" | head -1) ]] && barra_intallb "service ssh restart"
    echo ""
    msgi -bar2
    fun_ip() {
        TUIP=$(wget -qO- ipinfo.io/ip || wget -qO- ifconfig.me)
        echo "$TUIP" >/root/.ssh/authrized_key.reg
        echo -e "\033[1;97m ESTA ES TU IP PUBLICA? \033[32m$TUIP"
        msgi -bar2
        echo -ne "\033[1;97m Seleccione  \033[1;31m[\033[1;93m S \033[1;31m/\033[1;93m N \033[1;31m]\033[1;97m: \033[1;93m" && read tu_ip
        #read -p " Seleccione [ S / N ]: " tu_ip
        [[ "$tu_ip" = "n" || "$tu_ip" = "N" ]] && tu_ip
    }
    fun_ip
    for i in {1..4}; do tput cuu 1 && tput el; done
    msgi -bar2
    echo -e "\033[1;93m             AGREGAR Y EDITAR PASS ROOT\033[1;97m"
    msgi -bar
    echo -e "\033[1;97m CAMBIAR PASS ROOT? \033[32m"
    msgi -bar2
    echo -ne "\033[1;97m Seleccione  \033[1;31m[\033[1;93m S \033[1;31m/\033[1;93m N \033[1;31m]\033[1;97m: \033[1;93m" && read pass_root
    #read -p " Seleccione [ S / N ]: " tu_ip
    [[ "$pass_root" = "s" || "$pass_root" = "S" ]] && pass_root
    for i in {1..6}; do tput cuu 1 && tput el; done
    
    msgi -bar2
    echo -e "\033[1;93m\a\a\a      SE PROCEDERA A INSTALAR LAS ACTULIZACIONES\n PERTINENTES DEL SISTEMA, ESTE PROCESO PUEDE TARDAR\n VARIOS MINUTOS Y PUEDE PEDIR ALGUNAS CONFIRMACIONES \033[0;37m"
    msgi -bar
    read -t 120 -n 1 -rsp $'\033[1;97m           Preciona Enter Para continuar\n'
    clear && clear
    apt update
    apt upgrade -y

    install_paquetes
}

instalacionInicial

# Clonar el repositorio en un directorio temporal
git clone https://github.com/Angel892/vpsmanager.git $mainPath
if [ $? -ne 0 ]; then
    echo "Error: La clonación del repositorio falló."
    exit 1
fi

# Dar permisos de ejecución al script principal y a los scripts de funciones de manera recursiva
sudo find $mainPath/ -type f -name "*.sh" -exec chmod +x {} \;
if [ $? -ne 0 ]; then
    echo "Error: No se pudieron asignar los permisos de ejecución."
    exit 1
fi

alias1="/usr/bin/adm"
alias2="/usr/bin/ADM"

if [ -e "$alias1" ]; then
    sudo rm $alias1
    echo "$MENU_PATH" >$alias1 && chmod +x $alias1
else
    echo "$MENU_PATH" >$alias1 && chmod +x $alias1
fi

if [ -e "$alias2" ]; then
    sudo rm $alias2
    echo "$MENU_PATH" >$alias2 && chmod +x $alias2
else
    echo "$MENU_PATH" >$alias2 && chmod +x $alias2
fi

# Ejecutar el script principal desde su nueva ubicación (evitar usando exec para mantener la sesión)
$ALIAS_COMMAND
if [ $? -ne 0 ]; then
    echo "Error: Falló la ejecución del script principal."
    exit 1
fi
